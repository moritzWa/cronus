{
  "name": "Cronus",
  "version": "1.6.9",
  "private": true,
  "description": "An Electron application with React and TypeScript",
  "main": "./out/main/index.js",
  "author": "example.com",
  "homepage": "https://www.whatdidyougetdonetoday.ai",
  "repository": {
    "type": "git",
    "url": "https://github.com/moritzWa/whatdidyougetdonetoday-ai.git"
  },
  "scripts": {
    "------ DEVELOPMENT ---------": "echo '------ DEVELOPMENT ---------'",
    "dev": "VITE_BUILD_DATE=dev electron-vite dev",
    "postinstall": "electron-builder install-app-deps",
    "------ LINTING & TYPE-CHECKING ---------": "echo '------ LINTING & TYPE-CHECKING ---------'",
    "format": "prettier --write .",
    "lint": "eslint --cache .",
    "typecheck": "bun run typecheck:node && bun run typecheck:web",
    "typecheck:node": "tsc --noEmit -p tsconfig.node.json --composite false",
    "typecheck:web": "tsc --noEmit -p tsconfig.web.json --composite false",
    "------ BUILDING ---------": "echo '------ BUILDING ---------'",
    "build": "VITE_BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') electron-vite build",
    "build:with-typecheck": "bun run typecheck && VITE_BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') electron-vite build",
    "build:unpack": "bun run build && electron-builder --dir",
    "build:local": "bun run build && electron-builder --mac --dir --config.mac.notarize=false",
    "build:win": "bun run build && electron-builder --win",
    "build:linux": "electron-vite build && electron-builder --linux",
    "build:mac:electron-builder": "NODE_ENV=production bun run build && npx electron-builder --mac --arm64 --publish never",
    "------ NATIVE MODULES ---------": "echo '------ NATIVE MODULES ---------'",
    "native-modules:rebuild": "bun run native-modules:clean && npx electron-rebuild -f -m src/native-modules/native-windows",
    "native-modules:rebuild:arm": "bun run native-modules:rebuild -- --arch arm64",
    "native-modules:rebuild:x64": "bun run native-modules:rebuild -- --arch x64",
    "native-modules:rebuild:all": "bun run native-modules:rebuild:arm && bun run native-modules:rebuild:x64",
    "native-modules:clean": "rimraf src/native-modules/**/bin && rimraf src/native-modules/**/build",
    "------ PUBLISHING & DEPLOYMENT ---------": "echo '------ PUBLISHING & DEPLOYMENT ---------'",
    "check-latest-version-published": "bash check-latest-version-published.sh",
    "create-latest-links": "bash create-latest-links.sh",
    "build:for-publish:arm64": "time (bun run native-modules:rebuild:arm && NODE_ENV=production bun run build && dotenv -e .env.production -- npx electron-builder --mac --arm64 && say 'ARM64 build for publish complete')",
    "build:for-publish:x64": "time (bun run native-modules:rebuild:x64 && NODE_ENV=production bun run build && dotenv -e .env.production -- npx electron-builder --mac --x64 && say 'x64 build for publish complete')",
    "publish:arm64": "time (dotenv -e .env.production -- npx electron-builder --mac --arm64 --publish always && say 'ARM64 publish complete')",
    "publish:x64": "time (dotenv -e .env.production -- npx electron-builder --mac --x64 --publish always && say 'x64 publish complete')",
    "publish:with-links:arm64": "time (bun run build:for-publish:arm64 && bun run publish:arm64 && bun run create-latest-links arm64)",
    "publish:with-links:x64": "time (bun run build:for-publish:x64 && bun run publish:x64 && bun run create-latest-links x64)",
    "publish:with-links:all": "time (bun run publish:with-links:arm64 && bun run publish:with-links:x64 && say 'All publishing complete')",
    "publish-only:with-links:arm64": "time (bun run publish:arm64 && bun run create-latest-links arm64)",
    "publish-only:with-links:x64": "time (bun run publish:x64 && bun run create-latest-links x64)",
    "publish-only:with-links:all": "time (bun run publish-only:with-links:arm64 && bun run publish-only:with-links:x64 && say 'All publishing complete')",
    "------ UTILITIES ---------": "echo '------ UTILITIES ---------'",
    "clean:cronus-installation": "bash clean_cronus_installation.sh",
    "clean-and-build": "time (bun run clean:cronus-installation && bun run build:for-publish:arm64 && open dist/Cronus-*-arm64.dmg && say 'Build complete')",
    "clean-and-quick-build": "time (bun run clean:cronus-installation && NODE_ENV=production bun run build && npx electron-builder --mac --arm64 -c.mac.forceCodeSigning=false -c.mac.notarize=false -c.dmg.sign=false && open dist/Cronus-*-arm64.dmg && say 'Quick build complete')",
    "quick-build": "time (NODE_ENV=production bun run build && npx electron-builder --mac --arm64 -c.mac.forceCodeSigning=false -c.mac.notarize=false -c.dmg.sign=false && open dist/Cronus-*-arm64.dmg && say 'Quick build complete')"
  },
  "build": {
    "appId": "com.cronus.app",
    "productName": "Cronus",
    "files": [
      "out/",
      "node_modules/",
      "!build-assets/**/*",
      "package.json"
    ],
    "publish": [
      {
        "provider": "s3",
        "bucket": "cronusnewupdates",
        "region": "us-east-1"
      }
    ],
    "mac": {
      "artifactName": "Cronus-${version}-${arch}.${ext}",
      "category": "public.app-category.productivity",
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "entitlements": "build/entitlements.mac.plist",
      "entitlementsInherit": "build/entitlements.mac.plist",
      "forceCodeSigning": true,
      "notarize": true,
      "timestamp": "http://timestamp.apple.com/ts01",
      "icon": "build/icon.icns",
      "extendInfo": {
        "NSAppleEventsUsageDescription": "Cronus needs to access information from your web browser to track your activity."
      }
    },
    "dmg": {
      "sign": true
    },
    "protocols": {
      "name": "Cronus Auth",
      "schemes": [
        "cronus"
      ]
    },
    "extraResources": [
      {
        "from": "src/native-modules/native-windows/build/Release/nativeWindows.node",
        "to": "native/nativeWindows.node"
      }
    ]
  },
  "dependencies": {
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-toggle-group": "^1.1.10",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@react-oauth/google": "^0.12.1",
    "@trpc/client": "^10.45.2",
    "@trpc/react-query": "^10.45.2",
    "@types/color": "^4.2.0",
    "agent-base": "^6.0.2",
    "app-builder-lib": "^26.0.12",
    "builder-util": "^26.0.11",
    "builder-util-runtime": "^9.3.1",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "color": "^5.0.0",
    "cookie": "^0.4.1",
    "crc": "^4.3.2",
    "date-fns": "^4.1.0",
    "dayjs": "^1.11.13",
    "debug": "^4.4.1",
    "deepmerge": "4.3.1",
    "electron-app": "^1.0.0",
    "electron-updater": "^6.6.2",
    "framer-motion": "^12.12.2",
    "fs-extra": "^11.3.0",
    "graceful-fs": "^4.2.11",
    "https-proxy-agent": "^5.0.0",
    "js-yaml": "^4.1.0",
    "jsonfile": "^6.1.0",
    "lazy-val": "^1.0.5",
    "lodash": "^4.17.21",
    "lodash.clone": "^4.5.0",
    "lodash.clonedeep": "^4.5.0",
    "lodash.difference": "^4.5.0",
    "lodash.escaperegexp": "^4.1.2",
    "lodash.flatten": "^4.4.0",
    "lodash.get": "^4.4.2",
    "lodash.includes": "^4.3.0",
    "lodash.isempty": "^4.4.0",
    "lodash.isequal": "^4.5.0",
    "lodash.merge": "^4.6.2",
    "lodash.omit": "^4.5.0",
    "lodash.pick": "^4.4.0",
    "lodash.set": "^4.3.2",
    "lodash.uniq": "^4.5.0",
    "lru_map": "^0.3.3",
    "lucide-react": "^0.525.0",
    "ms": "^2.1.3",
    "node-addon-api": "^4.3.0",
    "posthog-js": "^1.249.5",
    "react-day-picker": "^9.7.0",
    "react-router-dom": "^7.6.1",
    "recharts": "^3.0.2",
    "sax": "^1.4.1",
    "semver": "^7.7.2",
    "shared": "workspace:*",
    "tailwind-merge": "^3.3.1",
    "tslib": "^1.9.3",
    "universalify": "^2.0.1",
    "xml2js": "^0.6.2",
    "xmlbuilder": "^15.1.1",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@electron-toolkit/eslint-config-prettier": "^3.0.0",
    "@electron-toolkit/eslint-config-ts": "^3.0.0",
    "@electron-toolkit/preload": "^3.0.1",
    "@electron-toolkit/tsconfig": "^1.0.1",
    "@electron-toolkit/utils": "^4.0.0",
    "@electron/notarize": "^3.0.1",
    "@types/node": "^22.14.1",
    "@types/react": "^19.1.1",
    "@types/react-dom": "^19.1.2",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.19",
    "dotenv": "^16.5.0",
    "dotenv-cli": "^8.0.0",
    "electron": "35.1.5",
    "electron-builder": "^26.0.12",
    "electron-rebuild": "^3.2.9",
    "electron-vite": "^3.1.0",
    "eslint": "^9.24.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "postcss": "^8.4.38",
    "prettier": "^3.5.3",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "tailwindcss": "^3.4.3",
    "typescript": "^5.8.3",
    "vite": "^6.2.6"
  }
}
